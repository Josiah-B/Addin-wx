<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:addinwx="clr-namespace:Add_InWx"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="TitleBar"
	x:Name="MainTitleBar" Margin="0,1,0,0" Width="Auto">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="CustomNormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
        </LinearGradientBrush>
        <Style x:Key="CheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomSimpleCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource CustomNormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">

                        <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="20" Height="20" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Border x:Name="Border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                    <!--<Path x:Name="CheckMark" Stroke="{DynamicResource GlyphBrush}" StrokeThickness="2" SnapsToDevicePixels="False" Data="M 0 0 L 13 13 M 0 13 L 13 0"/>-->
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </BulletDecorator>

                        <!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <!--<Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>-->
                                <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>-->
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <addinwx:CustomBooleanToVisibilityConverter x:Key="BoolToVis" True="Collapsed" False="Visible"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis2"/>
        <!--<Style x:Key="MyWaterMarkStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid >
                            <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="0" Margin="0"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2,0,0,0" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" VerticalAlignment="Center" />
                            <Label Margin="2,0,0,0" Padding="0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center" Visibility="Collapsed" Foreground="Gray" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" Width="500">
        <DockPanel LastChildFill="False" HorizontalAlignment="Stretch" Width="{Binding ElementName=LayoutRoot, Path=ActualWidth}">
            <Border x:Name="StationViewer" BorderThickness="0" DockPanel.Dock="Top" Height="Auto" Visibility="Collapsed" HorizontalAlignment="Stretch">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#CC3A5CF5"/>
                        <GradientStop Color="#CCBDBDBD" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <StackPanel>
                    <ListBox x:Name="MainList" ItemsSource="{Binding}" SelectedIndex="0" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border x:Name="MainBorder" DockPanel.Dock="Left" BorderBrush="LightGray" BorderThickness="1" VerticalAlignment="Center" Opacity="1" CornerRadius="5" Padding="3,1" HorizontalAlignment="Stretch" Margin="1,0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,0.3" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#59FFFFFF" Offset="1"/>
                                            <GradientStop Color="#75FFFFFF"/>
                                            <GradientStop Color="#B2FFFFFF" Offset="0.702"/>
                                            <GradientStop Color="#59FFFFFF" Offset="0.902"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">

                                        <TextBlock VerticalAlignment="Center" FontSize="13">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0} - {1}">
                                                    <Binding Path="Name"/>
                                                    <Binding Path="WXStationType"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>
            <Border x:Name="MainButton" Width="{Binding ElementName=LayoutRoot, Path=ActualWidth}" BorderThickness="0" CornerRadius="0,0,40,40" Padding="10,0" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" MouseLeftButtonDown="MainButtonClicked" DockPanel.Dock="Bottom">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,0.3" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#59FFFFFF" Offset="1"/>
                        <GradientStop Color="#75FFFFFF"/>
                        <GradientStop Color="#B2FFFFFF" Offset="0.702"/>
                        <GradientStop Color="#59FFFFFF" Offset="0.902"/>
                    </LinearGradientBrush>
                </Border.Background>

                <DockPanel Margin="0" DataContext="{Binding ElementName=MainList, Path=SelectedItem}" HorizontalAlignment="Stretch">
                    <StackPanel DockPanel.Dock="Top">
                        <TextBlock x:Name="MainText" HorizontalAlignment="Center" TextWrapping="noWrap" FontSize="22" FontStyle="Oblique" TextTrimming="CharacterEllipsis" TextOptions.TextFormattingMode="Display">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} - {1}">
                                    <Binding Path="Name"/>
                                    <Binding Path="WXStationType"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock x:Name="StatusText" FontSize="13" HorizontalAlignment="Center" Foreground="#FF363636">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Status: {0} - Last Updated at: {1:hh.mm.ss tt}">
                                    <Binding Path="WXStation.Status" UpdateSourceTrigger="PropertyChanged"/>
                                    <Binding Path="WXStation.WXData.LastUpdated"/>
                                </MultiBinding>
                            </TextBlock.Text>

                        </TextBlock>
                    </StackPanel>
                </DockPanel>
            </Border>
        </DockPanel>
    </Grid>
</UserControl>